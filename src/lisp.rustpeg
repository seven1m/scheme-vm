use values::*;

pub whitespace
	= [ \t\n]+

pub escape
	= "\\" .

pub string -> Box<Val>
	= "\"" s:$(escape / [^"])* "\"" { Box::new(Val::Str { val: s.to_string() }) }

pub atom -> Box<Val>
	= n:$([^\(\) \t\n\[\]\{\}]+) { Box::new(Val::Atom { name: n.to_string() }) }

pub sexp -> Box<Val>
	= quoted_sexp / simple_sexp

pub simple_sexp -> Box<Val>
	= "(" whitespace* s:(expression ** whitespace) whitespace* ")" { Box::new(Val::Arr { vals: s }) }

pub quote -> Box<Val>
	= n:$("'" / ",@" / "," / "`") { Box::new(Val::Atom { name: n.to_string() }) }

pub quoted_sexp -> Box<Val>
	= q:quote s:simple_sexp { Box::new(Val::Arr { vals: vec![q, s] }) }

pub expression -> Box<Val>
	= string / atom
