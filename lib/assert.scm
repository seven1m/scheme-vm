(import (only (scheme base) begin define-syntax eq? eqv? equal? if newline not quote write-string))

(define-library (assert)
  (export assert)
  (begin
    (define-syntax assert
      (syntax-rules (eq? eqv? equal?)
        ((assert (eq? expected actual))
         (assert (eq? expected actual) expected actual))
        ((assert (eqv? expected actual))
         (assert (eqv? expected actual) expected actual))
        ((assert (equal? expected actual))
         (assert (equal? expected actual) expected actual))
        ((assert expr)
         (assert expr (quote (not #f)) expr))
        ((assert expr expected actual)
         (if (not expr)
             (begin
               (write-string "(assert ")
               (write-string (quote expr))
               (write-string ") failed:")
               (newline)
               (write-string "  expected: ")
               (write-string expected)
               (newline)
               (write-string "  actual:   ")
               (write-string actual)
               (newline))))))))
