(define-syntax assert
  (syntax-rules (eq? eqv?)
    ((assert (eq? expected actual))
     (if (not (eq? expected actual))
         (begin
           (write "(assert (eq? ")
           (write (quote expected))
           (write " ")
           (write (quote actual))
           (print ")) failed:")
           (write "  expected: ")
           (print expected)
           (write "  actual:   ")
           (print actual))))
    ((assert (eqv? expected actual))
     (if (not (eqv? expected actual))
         (begin
           (write "(assert (eqv? ")
           (write (quote expected))
           (write " ")
           (write (quote actual))
           (print ")) failed:")
           (write "  expected: ")
           (print expected)
           (write "  actual:   ")
           (print actual))))
    ((assert expr)
     (if (not expr)
         (begin
           (write "(assert ")
           (write (quote expr))
           (print ") failed:")
           (print "  expected: (not #f)")
           (write "  actual:   ")
           (print expr))))))
